<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        方式：构造器参数索引注入
        优缺点：参数位置的注入对参数顺序有极强的依赖性，若构造函数参数被调整，会导致注入失败
    -->
    <bean id="diByConstructorParamIndex" class="com.xavier.entity.UserModel">
        <constructor-arg index="0" value="Xavier Charles"/>
        <constructor-arg index="1" value="Autowired By Constructor Parameter Index"/>
    </bean>

    <!--
        方式：构造器参数类型注入
        优缺点：实际上按照参数位置或者按照参数的类型注入，都有一个问题，很难通过bean的配置文件，知道这个参数是对应UserModel中的那个属性的，代码的可读性不好
    -->
    <bean id="diByConstructorParamType" class="com.xavier.entity.UserModel">
        <constructor-arg type="java.lang.Integer" value="30"/>
        <constructor-arg type="java.lang.String" value="Xavier Charles"/>
        <constructor-arg type="java.lang.String" value="Autowired By Constructor Parameter Type"/>
    </bean>

    <!--通过构造器参数名称注入-->
    <bean id="diByConstructorParamName" class="com.xavier.entity.UserModel">
        <constructor-arg name="name" value="Xavier Charles"/>
        <constructor-arg name="age" value="26"/>
        <constructor-arg name="description" value="Autowired By Constructor Parameter Name"/>
    </bean>

    <!--
        对于标准javabean，setter方法注入

        setter注入相对于构造函数注入要灵活一些，构造函数需要指定对应构造函数中所有参数的值，而setter注入的方式没有这种限制，不需要对所有属性都进行注入，可以按需进行注入。
        spring容器内部自动会将value的值转换为对象的实际类型
    -->
    <bean id="diBySetter" class="com.xavier.entity.MenuModel">
        <property name="label" value="Label"/>
        <property name="theSort" value="Spring"/>
    </bean>


    <bean id="user" class="com.xavier.entity.UserModel"/>
    <bean id="diBeanBySetter" class="com.xavier.entity.PersonModel">
        <property name="userModel" ref="user"/>
        <property name="menuModel">
            <bean class="com.xavier.entity.MenuModel">
                <property name="label" value="Label Type"/>
                <property name="theSort" value="String Test"/>
            </bean>
        </property>
    </bean>

    <bean id="diBeanByConstructor" class="com.xavier.entity.PersonModel">
        <constructor-arg index="0" ref="user"/>
        <constructor-arg index="1">
            <bean class="com.xavier.entity.MenuModel">
                <constructor-arg index="0" value="Label-Type"/>
                <constructor-arg index="1" value="String-Test"/>
            </bean>
        </constructor-arg>
    </bean>

</beans>